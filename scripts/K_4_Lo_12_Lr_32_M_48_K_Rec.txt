+-----------------+----------------------+
| Python Version  |        3.6.5         |
+-----------------+----------------------+
| PyTorch Version |        1.0.0         |
+-----------------+----------------------+
|     Device      | Tesla V100-SXM2-16GB |
+-----------------+----------------------+
|      Cores      |          8           |
+-----------------+----------------------+
|      GPUs       |          1           |
+-----------------+----------------------+
|  CUDNN Enabled  |         True         |
+-----------------+----------------------+
|  Architecture   |  Recursive NN (x4)   |
+-----------------+----------------------+
|     Dataset     |       CIFAR10        |
+-----------------+----------------------+
|     Testing     |        False         |
+-----------------+----------------------+
|     Epochs      |          4           |
+-----------------+----------------------+
|   Batch Size    |         128          |
+-----------------+----------------------+
|  Learning Rate  |         0.01         |
+-----------------+----------------------+
|  LR Milestones  |        [550]         |
+-----------------+----------------------+
|   Real Layers   |          12          |
+-----------------+----------------------+
|  Total Layers   |          32          |
+-----------------+----------------------+
|     Filters     |          48          |
+-----------------+----------------------+
|    BatchNorm    |        False         |
+-----------------+----------------------+
==> Preparing data..
Files already downloaded and verified
Files already downloaded and verified
Recursive ConvNet
Conv_K_Recusive_Net(
  (act): ReLU(inplace)
  (V): Conv2d(3, 48, kernel_size=(8, 8), stride=(1, 1), padding=(3, 3))
  (P): MaxPool2d(kernel_size=4, stride=4, padding=2, dilation=1, ceil_mode=False)
  (Wk): ModuleList(
    (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (10): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (C): Linear(in_features=3072, out_features=10, bias=True)
)

Layer Block:  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]


		Parameters: 0.289402M
Current set up
Testing  False
[ALERT]: Path to results (this may overwrite ../results/dicts/ensemble_recursives/Ensemble_K_Recursive_L_12_M_32_BN_48_K_False.pkl
[ALERT]: Path to checkpoint (this may overwrite ./checkpoint/Ensemble_K_Recursive_Lo_12_Lr_32_M_48_BN_False_K_4.t7
Do you want to continue? [Y/n]: [OK]: Starting Training of Recursive Ensemble Model

Epoch: 0
Train :: Loss: 2.03 | Accy: 19.54
Valid :: Loss: 1.91 | Accy: 26.91
Saving..
'run_epoch'  28807.00 ms

Epoch: 1
Train :: Loss: 1.77 | Accy: 33.45
Valid :: Loss: 1.63 | Accy: 39.75
Saving..
'run_epoch'  29321.01 ms

Epoch: 2
Train :: Loss: 1.61 | Accy: 40.21
Valid :: Loss: 1.58 | Accy: 44.22
Saving..
'run_epoch'  29247.63 ms

Epoch: 3
Train :: Loss: 1.46 | Accy: 45.39
Valid :: Loss: 1.48 | Accy: 48.51
Saving..
'run_epoch'  29017.19 ms
Lenght of results collected
+--------------+-------------+-------------+------------+
|    Model     | Epoch Train | Epoch Valid | Iter Train |
+--------------+-------------+-------------+------------+
| Individual 1 |      4      |      4      |     0      |
+--------------+-------------+-------------+------------+
| Individual 2 |      4      |      4      |     0      |
+--------------+-------------+-------------+------------+
| Individual 3 |      4      |      4      |     0      |
+--------------+-------------+-------------+------------+
| Individual 4 |      4      |      4      |     0      |
+--------------+-------------+-------------+------------+
|   Ensemble   |      4      |      4      |     0      |
+--------------+-------------+-------------+------------+
